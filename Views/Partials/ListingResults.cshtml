@inherits Umbraco.Web.Mvc.UmbracoViewPage

@using System.Collections.Specialized
@using umbraco_realestate_demo.Utils

@{
    const int ITEMS_PER_PAGE = 3;

    // search/filter listings, based on query parameters
    var queryString = Request.QueryString;
    var searchTerm = queryString["searchterm"];

    var listingFinder = DependencyResolver.Current.GetService<ListingFinder>();
    IEnumerable<umbraco_realestate_demo.Database.Models.ListingItem> filteredListings;
    if (searchTerm != null)
    {
        filteredListings = listingFinder.SearchListings(searchTerm);
    }
    else
    {
        filteredListings = listingFinder.FilterListings(queryString);
    }

    // get the items needed for the current page
    int.TryParse(Request.QueryString["page"], out int currentPage);
    if (currentPage == 0) { currentPage = 1; }
    var listings = filteredListings
        .Skip((currentPage - 1) * ITEMS_PER_PAGE)
        .Take(ITEMS_PER_PAGE);

    // calculate how many pages are needed (for the pagination buttons)
    int maxPages = (int)Math.Ceiling(filteredListings.Count() / (double)ITEMS_PER_PAGE);
}


@* results start *@
<div class="row">
    @if (listings.Count() == 0)
    {
        <div class="col">
            No results, try a different set of search terms
        </div>
    }

    @foreach (var item in listings)
    {

        <div class="col-md-4">
            <div class="card-box-a card-shadow card-fading card-fading-isopaque">
                <div class="img-box-a">
                    <img src="@item.Media[0].Filepath" alt="" class="img-a img-fluid">
                </div>
                <div class="card-overlay">
                    <div class="card-overlay-a-content">
                        <div class="card-header-a">
                            <h2 class="card-title-a">
                                <span>
                                    @item.HeadLine
                                </span>
                            </h2>
                        </div>
                        <div class="card-body-a">
                            <div class="price-box d-flex">
                                <a href="\listing\@item.Id" class="price-a">@item.ListingType | @String.Format("{0:# ##0 ##0}", item.Price) kr.</a>
                            </div>
                            <a href="\listing\@item.Id" class="link-a">
                                Click here to view
                                <span class="ion-ios-arrow-forward"></span>
                            </a>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
</div>
@* results end *@

@* pagination start *@
<div class="row">
    <div class="col-sm-12">
        <nav class="pagination-a">
            <ul class="pagination justify-content-end">

                @*back arrrow*@
                <li class="page-item next @((currentPage > 1 && maxPages > 1) ? "" : "disabled")">
                    <div class="page-link" tabindex="-1" onclick="getPage(@( currentPage - 1 ))">
                        <span class="ion-ios-arrow-back"></span>
                    </div>
                </li>


                @for (int i = 1; i <= maxPages; i++)
                {
                    <li class="page-item @(i==currentPage ? "active page-selector-current" : "" )">
                        <div class="page-link" onclick="getPage(@i)">@i</div>
                    </li>
                }

                @*forward arrrow*@
                <li class="page-item next @(currentPage < maxPages ? "" : "disabled")">
                    <div class="page-link" tabindex="-1" onclick="getPage(@( currentPage + 1 ))">
                        <span class="ion-ios-arrow-forward"></span>
                    </div>
                </li>

            </ul>
        </nav>
    </div>
</div>
@* pagination end *@
